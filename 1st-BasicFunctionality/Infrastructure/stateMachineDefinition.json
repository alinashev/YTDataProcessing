{
  "StartAt": "LambdaSender",
  "States": {
    "LambdaSender": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "Payload.$": "$",
        "FunctionName": "arn:aws:lambda:us-east-2:062261762656:function:a-sender:$LATEST"
      },
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "ResultPath": "$.error",
          "Next": "Notify"
        }
      ],
      "Retry": [
        {
          "ErrorEquals": [
            "States.Timeout",
            "Lambda.Unknown",
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException"
          ],
          "IntervalSeconds": 2,
          "MaxAttempts": 6,
          "BackoffRate": 2
        }
      ],
      "Next": "MapLambdaPuller"
    },
    "Notify": {
      "Type": "Task",
      "Resource": "arn:aws:states:::sns:publish",
      "Retry": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "IntervalSeconds": 3,
          "MaxAttempts": 2,
          "BackoffRate": 1.5
        }
      ],
      "Parameters": {
        "TopicArn": "arn:aws:sns:us-east-2:062261762656:a-sns-Topic-1V2UESBTJ6QJZ",
        "Subject": "[ERROR]: Task Failed",
        "Message.$": "$.error"
      },
      "End": true
    },
    "MapLambdaPuller": {
      "Type": "Map",
      "InputPath": "$.body",
      "ItemsPath": "$.taskList",
      "MaxConcurrency": 100,
      "ResultPath": "$.channel",
      "Iterator": {
        "StartAt": "LambdaPuller",
        "States": {
          "LambdaPuller": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "OutputPath": "$.Payload",
            "Parameters": {
              "Payload.$": "$",
              "FunctionName": "arn:aws:lambda:us-east-2:062261762656:function:a-puller:$LATEST"
            },
            "Next": "LambdaTransformer"
          },
          "LambdaTransformer": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "OutputPath": "$.Payload",
            "Parameters": {
              "Payload.$": "$",
              "FunctionName": "arn:aws:lambda:us-east-2:062261762656:function:a-transformer:$LATEST"
            },
            "Retry": [
              {
                "ErrorEquals": [
                  "States.Timeout",
                  "Lambda.Unknown",
                  "Lambda.ServiceException",
                  "Lambda.AWSLambdaException",
                  "Lambda.SdkClientException"
                ],
                "IntervalSeconds": 2,
                "MaxAttempts": 6,
                "BackoffRate": 2
              }
            ],
            "End": true
          }
        }
      },
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "ResultPath": "$.error",
          "Next": "Notify"
        }
      ],
      "Next": "AthenaStartQueryInfo"
    },
    "AthenaStartQueryInfo": {
      "Type": "Parallel",
      "Catch": [
        {
          "ErrorEquals": [
            "States.ALL"
          ],
          "ResultPath": "$.error",
          "Next": "Notify"
        }
      ],
      "End": true,
      "Branches": [
        {
          "StartAt": "CreateTable1",
          "States": {
            "CreateTable1": {
              "Resource": "arn:aws:states:::athena:startQueryExecution.sync",
              "Parameters": {
                "QueryString": "CREATE EXTERNAL TABLE IF NOT EXISTS `a-database`.`aggregation1`(time_id string, add_date date, hour int, view_count bigint, channel_id string, channel_name string) LOCATION 's3://a-data-bucket-1/Aggregated/leastviewcountsinchannels'",
                "WorkGroup": "primary",
                "ResultConfiguration": {
                  "OutputLocation": "s3://a-data-bucket-1/AgTest/Test"
                }
              },
              "Type": "Task",
              "Next": "Aggregation1"
            },
            "Aggregation1": {
              "Type": "Task",
              "Resource": "arn:aws:states:::athena:startQueryExecution.sync",
              "Parameters": {
                "QueryString": "INSERT INTO \"a-database\".\"aggregation1\" SELECT * FROM ( SELECT DISTINCT a.time_id, a.add_date, a.hour, b.view_count, b.channel_id, c.channel_name FROM (SELECT time_id,add_date, hour FROM \"a-database\".\"dimtimechannel\" WHERE add_date = CURRENT_DATE AND hour = (SELECT EXTRACT(HOUR FROM CURRENT_TIMESTAMP))) AS a INNER JOIN ( SELECT time_id, view_count, channel_id FROM \"a-database\".\"factchannel\") AS b ON a.time_id = b.time_id INNER JOIN( SELECT * FROM \"a-database\".\"dimchannel\") AS c ON b.channel_id = c.channel_id)ORDER BY view_count ASC LIMIT 3;",
                "WorkGroup": "primary",
                "ResultConfiguration": {
                  "OutputLocation": "s3://a-data-bucket-1/Aggregated/res/leastviewcountsinchannels"
                }
              },
              "End": true
            }
          }
        },
        {
          "StartAt": "CreateTable2",
          "States": {
            "CreateTable2": {
              "Resource": "arn:aws:states:::athena:startQueryExecution.sync",
              "Parameters": {
                "QueryString": "CREATE EXTERNAL TABLE IF NOT EXISTS `a-database`.`aggregation2`(time_id string, add_date date, hour int, view_count bigint, channel_id string, channel_name string) LOCATION 's3://a-data-bucket-1/Aggregated/leastviewcountsinchannels'",
                "WorkGroup": "primary",
                "ResultConfiguration": {
                  "OutputLocation": "s3://a-data-bucket-1/AgTest/Test"
                }
              },
              "Type": "Task",
              "Next": "Aggregation2"
            },
            "Aggregation2": {
              "Type": "Task",
              "Resource": "arn:aws:states:::athena:startQueryExecution.sync",
              "Parameters": {
                "QueryString": "INSERT INTO \"a-database\".\"aggregation2\" SELECT * FROM (SELECT DISTINCT  a.time_id, a.add_date, a.hour, b.subscriber_count, b.channel_id, c.channel_name FROM ( SELECT time_id, add_date, hour FROM \"a-database\".\"dimtimechannel\" WHERE add_date = CURRENT_DATE AND hour = (SELECT EXTRACT(HOUR FROM CURRENT_TIMESTAMP))) AS a INNER JOIN ( SELECT time_id, subscriber_count, channel_id FROM \"a-database\".\"factchannel\") AS b ON a.time_id = b.time_id INNER JOIN( SELECT * FROM \"a-database\".\"dimchannel\" ) AS c ON b.channel_id = c.channel_id )ORDER BY subscriber_count DESC LIMIT 3;",
                "WorkGroup": "primary",
                "ResultConfiguration": {
                  "OutputLocation": "s3://a-data-bucket-1/Aggregated/res/mostsubscribedchannel"
                }
              },
              "End": true
            }
          }
        },
        {
          "StartAt": "CreateTable3",
          "States": {
            "CreateTable3": {
              "Resource": "arn:aws:states:::athena:startQueryExecution.sync",
              "Parameters": {
                "QueryString": "CREATE EXTERNAL TABLE IF NOT EXISTS  `a-database`.`aggregation3`(time_id string,add_date date, hour int, comment_count bigint, video_id string, title string)LOCATION 's3://a-data-bucket-1/Aggregated/mostcommentsvideo'",
                "WorkGroup": "primary",
                "ResultConfiguration": {
                  "OutputLocation": "s3://a-data-bucket-1/AgTest/Test"
                }
              },
              "Type": "Task",
              "Next": "Aggregation3"
            },
            "Aggregation3": {
              "Type": "Task",
              "Resource": "arn:aws:states:::athena:startQueryExecution.sync",
              "Parameters": {
                "QueryString": "INSERT INTO \"a-database\".\"aggregation3\" SELECT * FROM ( SELECT DISTINCT  a.time_id, a.add_date, a.hour, b.comment_count, b.video_id, c.title FROM (SELECT time_id, add_date, hour FROM \"a-database\".\"dimtimevideo\" WHERE add_date = CURRENT_DATE AND hour = (SELECT EXTRACT(HOUR FROM CURRENT_TIMESTAMP))) AS a INNER JOIN ( SELECT * FROM \"a-database\".\"factvideo\") AS b ON a.time_id = b.time_id INNER JOIN(SELECT * FROM \"a-database\".\"dimvideo\" ) AS c ON b.video_id = c.video_id) ORDER BY comment_count DESC LIMIT 3; ",
                "WorkGroup": "primary",
                "ResultConfiguration": {
                  "OutputLocation": "s3://a-data-bucket-1/Aggregated/res/mostcommentsvideo"
                }
              },
              "End": true
            }
          }
        },
        {
          "StartAt": "CreateTable4",
          "States": {
            "CreateTable4": {
              "Resource": "arn:aws:states:::athena:startQueryExecution.sync",
              "Parameters": {
                "QueryString": "CREATE EXTERNAL TABLE IF NOT EXISTS  `a-database`.`aggregation4`(time_id string, add_date date, hour int, like_count bigint, video_id string, title string) LOCATION 's3://a-data-bucket-1/Aggregated/mostlikedvideo'",
                "WorkGroup": "primary",
                "ResultConfiguration": {
                  "OutputLocation": "s3://a-data-bucket-1/AgTest/Test"
                }
              },
              "Type": "Task",
              "Next": "Aggregation4"
            },
            "Aggregation4": {
              "Type": "Task",
              "Resource": "arn:aws:states:::athena:startQueryExecution.sync",
              "Parameters": {
                "QueryString": "INSERT INTO \"a-database\".\"aggregation4\" SELECT * FROM (SELECT DISTINCT  a.time_id, a.add_date, a.hour, b.like_count, b.video_id, c.title FROM (SELECT time_id, add_date, hour FROM \"a-database\".\"dimtimevideo\" WHERE add_date = CURRENT_DATE AND hour = (SELECT EXTRACT(HOUR FROM CURRENT_TIMESTAMP))) AS a INNER JOIN (SELECT * FROM \"a-database\".\"factvideo\") AS b ON a.time_id = b.time_id INNER JOIN(SELECT * FROM \"a-database\".\"dimvideo\") AS c ON b.video_id = c.video_id) ORDER BY like_count DESC LIMIT 3; ",
                "WorkGroup": "primary",
                "ResultConfiguration": {
                  "OutputLocation": "s3://a-data-bucket-1/Aggregated/res/mostlikedvideo"
                }
              },
              "End": true
            }
          }
        },
        {
          "StartAt": "CreateTable5",
          "States": {
            "CreateTable5": {
              "Resource": "arn:aws:states:::athena:startQueryExecution.sync",
              "Parameters": {
                "QueryString": "CREATE EXTERNAL TABLE IF NOT EXISTS  `a-database`.`aggregation5`(time_id string, add_date date, hour int, comment_count bigint, video_id string, channel_id string, channel_name string) LOCATION 's3://a-data-bucket-1/Aggregated/for-each-channel-mostcommentsvideo'",
                "WorkGroup": "primary",
                "ResultConfiguration": {
                  "OutputLocation": "s3://a-data-bucket-1/AgTest/Test"
                }
              },
              "Type": "Task",
              "Next": "Aggregation5"
            },
            "Aggregation5": {
              "Type": "Task",
              "Resource": "arn:aws:states:::athena:startQueryExecution.sync",
              "Parameters": {
                "QueryString": "INSERT INTO \"a-database\".\"aggregation5\" SELECT v.time_id, v.add_date, v.hour,  v.comment_count, v. video_id , ch.channel_id, ch.channel_name FROM ((SELECT DISTINCT a.time_id, a.add_date, a.hour, b.comment_count, b.video_id, c.channel_id FROM (SELECT time_id, add_date, hour FROM  \"a-database\".\"dimtimevideo\" WHERE add_date = CURRENT_DATE AND hour = (SELECT EXTRACT(HOUR FROM CURRENT_TIMESTAMP))) AS a INNER JOIN (SELECT * FROM  \"a-database\".\"factvideo\" ) AS b ON a.time_id = b.time_id INNER JOIN(SELECT * FROM  \"a-database\".\"dimvideo\") AS c ON b.video_id = c.video_id) video) v JOIN (SELECT DISTINCT * FROM  \"a-database\".\"dimchannel\") ch ON ch.channel_id = v.channel_id WHERE 3 > (SELECT COUNT(DISTINCT(comment_count)) FROM (SELECT DISTINCT  a.time_id, a.add_date, a.hour, b.comment_count, b.video_id, c.channel_id FROM ( SELECT time_id, add_date, hour FROM  \"a-database\".\"dimtimevideo\" WHERE add_date = CURRENT_DATE AND hour = (SELECT EXTRACT(HOUR FROM CURRENT_TIMESTAMP)) ) AS a INNER JOIN (SELECT * FROM  \"a-database\".\"factvideo\") AS b ON a.time_id = b.time_id INNER JOIN(SELECT * FROM  \"a-database\".\"dimvideo\") AS c ON b.video_id = c.video_id) v2 WHERE v.channel_id = v2.channel_id AND v.comment_count < v2.comment_count)",
                "WorkGroup": "primary",
                "ResultConfiguration": {
                  "OutputLocation": "s3://a-data-bucket-1/Aggregated/res/for-each-channel-mostcommentsvideo"
                }
              },
              "End": true
            }
          }
        },
        {
          "StartAt": "CreateTable6",
          "States": {
            "CreateTable6": {
              "Resource": "arn:aws:states:::athena:startQueryExecution.sync",
              "Parameters": {
                "QueryString": "CREATE EXTERNAL TABLE IF NOT EXISTS  `a-database`.`aggregation6`(time_id string, add_date date, hour int, like_count bigint, video_id string, channel_id string, channel_name string) LOCATION 's3://a-data-bucket-1/Aggregated/for-each-channel-mostlikedvideo'",
                "WorkGroup": "primary",
                "ResultConfiguration": {
                  "OutputLocation": "s3://a-data-bucket-1/AgTest/Test"
                }
              },
              "Type": "Task",
              "Next": "Aggregation6"
            },
            "Aggregation6": {
              "Type": "Task",
              "Resource": "arn:aws:states:::athena:startQueryExecution.sync",
              "Parameters": {
                "QueryString": "INSERT INTO \"a-database\".\"aggregation6\" SELECT v.time_id, v.add_date, v.hour,  v.like_count, v. video_id , ch.channel_id, ch.channel_name FROM ((SELECT DISTINCT a.time_id, a.add_date, a.hour, b.like_count, b.video_id, c.channel_id FROM (SELECT time_id, add_date, hour FROM  \"a-database\".\"dimtimevideo\" WHERE add_date = CURRENT_DATE AND hour = (SELECT EXTRACT(HOUR FROM CURRENT_TIMESTAMP))) AS a INNER JOIN (SELECT * FROM  \"a-database\".\"factvideo\") AS b ON a.time_id = b.time_id INNER JOIN(SELECT * FROM  \"a-database\".\"dimvideo\") AS c ON b.video_id = c.video_id) video) v JOIN (SELECT DISTINCT * FROM  \"a-database\".\"dimchannel\") ch ON ch.channel_id = v.channel_id WHERE 3 > (SELECT COUNT(DISTINCT(like_count)) FROM (SELECT DISTINCT  a.time_id, a.add_date, a.hour, b.like_count, b.video_id, c.channel_id FROM ( SELECT time_id, add_date, hour FROM  \"a-database\".\"dimtimevideo\" WHERE add_date = CURRENT_DATE AND hour = (SELECT EXTRACT(HOUR FROM CURRENT_TIMESTAMP))) AS a INNER JOIN (SELECT * FROM  \"a-database\".\"factvideo\") AS b ON a.time_id = b.time_id INNER JOIN(SELECT * FROM  \"a-database\".\"dimvideo\") AS c ON b.video_id = c.video_id) v2 WHERE v.channel_id = v2.channel_id AND v.like_count < v2.like_count)",
                "WorkGroup": "primary",
                "ResultConfiguration": {
                  "OutputLocation": "s3://a-data-bucket-1/Aggregated/res/for-each-channel-mostlikedvideo"
                }
              },
              "End": true
            }
          }
        }
      ]
    }
  }
}