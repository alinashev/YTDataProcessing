pipeline {
    agent any
    environment{
        Region = "us-east-2"
        StackName = "a-stack"

        BucketName = "a-data-bucket-1"
        LambdaSenderName = "a-sender"
        LambdaPullerName = "a-puller"
        LambdaTransformerName = "a-transformer"
        LambdaAggregatorName = "a-aggregator"
        DatabaseName = "a-database"
    }
    stages {
        stage('Uploading a SM definition'){
            steps{
                withCredentials([aws(accessKeyVariable:'AWS_ACCESS_KEY_ID', credentialsId:'aws-cresds1', secretKeyVariable:'AWS_SECRET_ACCESS_KEY')])
                {
                sh  '''
                    cd Infrastructure
                    aws s3 cp stateMachineDefinition.json s3://a-tech-bucket/StateMachines/stateMachineDefinition.json
                    cd ..
                '''
                }
            }
        }

        stage('Submit Stack') {
            steps {
                withCredentials([aws(accessKeyVariable:'AWS_ACCESS_KEY_ID', credentialsId:'aws-cresds1', secretKeyVariable:'AWS_SECRET_ACCESS_KEY')])
                {
                sh '''
                    aws cloudformation create-stack \
                      --stack-name $StackName \
                      --template-body file://Infrastructure/Infrastructure.yml --region $Region \
                      --capabilities CAPABILITY_NAMED_IAM \
                      --parameters \
                       ParameterKey=BucketName,ParameterValue=$BucketName \
                       ParameterKey=LambdaSenderName,ParameterValue=$LambdaSenderName \
                       ParameterKey=LambdaPullerName,ParameterValue=$LambdaPullerName \
                       ParameterKey=LambdaTransformerName,ParameterValue=$LambdaTransformerName \
                       ParameterKey=LambdaAggregatorName,ParameterValue=$LambdaAggregatorName \
                       ParameterKey=DatabaseName,ParameterValue=$DatabaseName \
                    '''
                }
              }
             }
            stage('Stack create complete'){
            steps{
                withCredentials([aws(accessKeyVariable:'AWS_ACCESS_KEY_ID', credentialsId:'aws-cresds1', secretKeyVariable:'AWS_SECRET_ACCESS_KEY')])
                    {
                    sh '''
                        aws cloudformation wait stack-create-complete \
                            --stack-name $StackName \
                            --region $Region
                        '''
                    }
                }
            }
           }
         }