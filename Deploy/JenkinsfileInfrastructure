pipeline {
    agent any
    stages {
        stage('Submit Stack') {
            steps {
                withCredentials([aws(accessKeyVariable:'AWS_ACCESS_KEY_ID', credentialsId:'aws-cresds1', secretKeyVariable:'AWS_SECRET_ACCESS_KEY')])
                {
                sh '''
                    aws cloudformation create-stack \
                      --stack-name a-test-stack-25 \
                      --template-body file://Infrastructure/Infrastructure.yml --region 'us-east-2' \
                      --capabilities CAPABILITY_NAMED_IAM \
                      --parameters \
                       ParameterKey=BucketName,ParameterValue=a-test-0125-bucket \
                       ParameterKey=S3EventQueueName,ParameterValue=A-test-25qs3 \
                       ParameterKey=ChannelSenderLambdaFunctionName,ParameterValue=A-test-send-25 \
                       ParameterKey=ChannelPullerLambdaFunctionName,ParameterValue=A-test-pull-25 \
                       ParameterKey=LambdaRoleName,ParameterValue=A-test-lambda-role-25 \
                       ParameterKey=LambdaTriggerQueueName,ParameterValue=A-puller-trigger-25 \
                       ParameterKey=DatabaseName,ParameterValue=a-test-db-25 \
                       ParameterKey=TransformerLambdaFunctionName,ParameterValue=A-transform-25 \
                       ParameterKey=TransformerTriggerQueueName,ParameterValue=a-transform-trigger-25 \
                    '''
                }
              }
             }
            stage('Stack create complete'){
            steps{
                withCredentials([aws(accessKeyVariable:'AWS_ACCESS_KEY_ID', credentialsId:'aws-cresds1', secretKeyVariable:'AWS_SECRET_ACCESS_KEY')])
                    {
                    sh '''
                        aws cloudformation wait stack-create-complete \
                            --stack-name a-test-stack \
                            --region 'us-east-2'
                        '''
                    }
                }
            }
           }
         }